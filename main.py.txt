import json
from http.server import BaseHTTPRequestHandler, HTTPServer
import traceback, os

def generate_meal_plan(age, gender, weight):
    return {
        "plans": [{
            "day": "Dimanche",
            "calories_target": 1401,
            "meals": [
                {"text": "CrÃªpes Ã  lâ€™avoine et fromage blanc"},
                {"text": "Poulet tikka light, riz basmati, concombre (portion lÃ©gÃ¨re)"},
                {"text": "Poulet, semoule, ratatouille (portion lÃ©gÃ¨re)"}
            ],
            "snacks": [{"text": "Smoothie lait + fruit + avoine"}]
        }],
        "shopping_list": {
            "flocons dâ€™avoine": {"qty": 70, "unit": "g"},
            "lait": {"qty": 330, "unit": "ml"},
            "fromage blanc": {"qty": 120, "unit": "g"},
            "poulet": {"qty": 180, "unit": "g"}
        }
    }

class NutriAIHandler(BaseHTTPRequestHandler):
    def _set_headers(self, code=200):
        self.send_response(code)
        self.send_header('Content-Type', 'application/json')
        # CORS
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Access-Control-Allow-Headers', 'Content-Type')
        self.send_header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS')
        self.end_headers()

    def do_OPTIONS(self):
        self._set_headers(204)

    def do_GET(self):
        if self.path == "/":
            self._set_headers()
            self.wfile.write(json.dumps({"message": "NutriAI API OK"}).encode())
        else:
            self.send_response(404); self.end_headers()

    def do_POST(self):
        if self.path == "/generate_meal_plan":
            try:
                content_length = int(self.headers.get('Content-Length', 0))
                post_data = self.rfile.read(content_length) if content_length else b"{}"
                data = json.loads(post_data or b"{}")
                age = data.get("age", 30)
                gender = data.get("gender", "female")
                weight = data.get("weight", 65)
                response = generate_meal_plan(age, gender, weight)
                self._set_headers()
                self.wfile.write(json.dumps(response).encode())
            except Exception as e:
                self._set_headers(500)
                self.wfile.write(json.dumps({"error": str(e)}).encode())
                traceback.print_exc()
        else:
            self.send_response(404); self.end_headers()

if __name__ == "__main__":
    port = int(os.environ.get("PORT", "8080"))
    server_address = ("0.0.0.0", port)
    httpd = HTTPServer(server_address, NutriAIHandler)
    print(f"ðŸš€ NutriAI API sur http://0.0.0.0:{port}")
    httpd.serve_forever()
